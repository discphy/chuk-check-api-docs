/*
 * chuk_check_core API
 * chuk_check_core API
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

import com.google.gson.Gson;
import com.google.gson.GsonBuilder;
import com.google.gson.JsonArray;
import com.google.gson.JsonDeserializationContext;
import com.google.gson.JsonDeserializer;
import com.google.gson.JsonElement;
import com.google.gson.JsonObject;
import com.google.gson.JsonParseException;
import com.google.gson.TypeAdapterFactory;
import com.google.gson.reflect.TypeToken;

import java.lang.reflect.Type;
import java.util.HashMap;
import java.util.HashSet;
import java.util.Map;
import java.util.Map.Entry;
import java.util.Set;

import org.openapitools.client.JSON;

/**
 * MatchCreateRequest
 */
@javax.annotation.Generated(value = "org.openapitools.codegen.languages.JavaClientCodegen", date = "2024-04-05T14:29:51.370708+09:00[Asia/Seoul]")
public class MatchCreateRequest {
  public static final String SERIALIZED_NAME_TEAM_ID = "teamId";
  @SerializedName(SERIALIZED_NAME_TEAM_ID)
  private Long teamId;

  public static final String SERIALIZED_NAME_STADIUM_ID = "stadiumId";
  @SerializedName(SERIALIZED_NAME_STADIUM_ID)
  private Long stadiumId;

  public static final String SERIALIZED_NAME_OTHER_TEAM_NAME = "otherTeamName";
  @SerializedName(SERIALIZED_NAME_OTHER_TEAM_NAME)
  private String otherTeamName;

  public static final String SERIALIZED_NAME_HOME = "home";
  @SerializedName(SERIALIZED_NAME_HOME)
  private Boolean home;

  public static final String SERIALIZED_NAME_NOTICE = "notice";
  @SerializedName(SERIALIZED_NAME_NOTICE)
  private String notice;

  public static final String SERIALIZED_NAME_START_DATE = "startDate";
  @SerializedName(SERIALIZED_NAME_START_DATE)
  private OffsetDateTime startDate;

  public static final String SERIALIZED_NAME_END_DATE = "endDate";
  @SerializedName(SERIALIZED_NAME_END_DATE)
  private OffsetDateTime endDate;

  public static final String SERIALIZED_NAME_VOTE_START_DATE = "voteStartDate";
  @SerializedName(SERIALIZED_NAME_VOTE_START_DATE)
  private OffsetDateTime voteStartDate;

  public static final String SERIALIZED_NAME_VOTE_END_DATE = "voteEndDate";
  @SerializedName(SERIALIZED_NAME_VOTE_END_DATE)
  private OffsetDateTime voteEndDate;

  public static final String SERIALIZED_NAME_ATTEND_DEADLINE_DATE = "attendDeadlineDate";
  @SerializedName(SERIALIZED_NAME_ATTEND_DEADLINE_DATE)
  private OffsetDateTime attendDeadlineDate;

  public MatchCreateRequest() {
  }

  public MatchCreateRequest teamId(Long teamId) {
    
    this.teamId = teamId;
    return this;
  }

   /**
   * Get teamId
   * @return teamId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getTeamId() {
    return teamId;
  }


  public void setTeamId(Long teamId) {
    this.teamId = teamId;
  }


  public MatchCreateRequest stadiumId(Long stadiumId) {
    
    this.stadiumId = stadiumId;
    return this;
  }

   /**
   * Get stadiumId
   * @return stadiumId
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Long getStadiumId() {
    return stadiumId;
  }


  public void setStadiumId(Long stadiumId) {
    this.stadiumId = stadiumId;
  }


  public MatchCreateRequest otherTeamName(String otherTeamName) {
    
    this.otherTeamName = otherTeamName;
    return this;
  }

   /**
   * Get otherTeamName
   * @return otherTeamName
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getOtherTeamName() {
    return otherTeamName;
  }


  public void setOtherTeamName(String otherTeamName) {
    this.otherTeamName = otherTeamName;
  }


  public MatchCreateRequest home(Boolean home) {
    
    this.home = home;
    return this;
  }

   /**
   * Get home
   * @return home
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public Boolean getHome() {
    return home;
  }


  public void setHome(Boolean home) {
    this.home = home;
  }


  public MatchCreateRequest notice(String notice) {
    
    this.notice = notice;
    return this;
  }

   /**
   * Get notice
   * @return notice
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public String getNotice() {
    return notice;
  }


  public void setNotice(String notice) {
    this.notice = notice;
  }


  public MatchCreateRequest startDate(OffsetDateTime startDate) {
    
    this.startDate = startDate;
    return this;
  }

   /**
   * Get startDate
   * @return startDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getStartDate() {
    return startDate;
  }


  public void setStartDate(OffsetDateTime startDate) {
    this.startDate = startDate;
  }


  public MatchCreateRequest endDate(OffsetDateTime endDate) {
    
    this.endDate = endDate;
    return this;
  }

   /**
   * Get endDate
   * @return endDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getEndDate() {
    return endDate;
  }


  public void setEndDate(OffsetDateTime endDate) {
    this.endDate = endDate;
  }


  public MatchCreateRequest voteStartDate(OffsetDateTime voteStartDate) {
    
    this.voteStartDate = voteStartDate;
    return this;
  }

   /**
   * Get voteStartDate
   * @return voteStartDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getVoteStartDate() {
    return voteStartDate;
  }


  public void setVoteStartDate(OffsetDateTime voteStartDate) {
    this.voteStartDate = voteStartDate;
  }


  public MatchCreateRequest voteEndDate(OffsetDateTime voteEndDate) {
    
    this.voteEndDate = voteEndDate;
    return this;
  }

   /**
   * Get voteEndDate
   * @return voteEndDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getVoteEndDate() {
    return voteEndDate;
  }


  public void setVoteEndDate(OffsetDateTime voteEndDate) {
    this.voteEndDate = voteEndDate;
  }


  public MatchCreateRequest attendDeadlineDate(OffsetDateTime attendDeadlineDate) {
    
    this.attendDeadlineDate = attendDeadlineDate;
    return this;
  }

   /**
   * Get attendDeadlineDate
   * @return attendDeadlineDate
  **/
  @javax.annotation.Nullable
  @ApiModelProperty(value = "")

  public OffsetDateTime getAttendDeadlineDate() {
    return attendDeadlineDate;
  }


  public void setAttendDeadlineDate(OffsetDateTime attendDeadlineDate) {
    this.attendDeadlineDate = attendDeadlineDate;
  }



  @Override
  public boolean equals(Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    MatchCreateRequest matchCreateRequest = (MatchCreateRequest) o;
    return Objects.equals(this.teamId, matchCreateRequest.teamId) &&
        Objects.equals(this.stadiumId, matchCreateRequest.stadiumId) &&
        Objects.equals(this.otherTeamName, matchCreateRequest.otherTeamName) &&
        Objects.equals(this.home, matchCreateRequest.home) &&
        Objects.equals(this.notice, matchCreateRequest.notice) &&
        Objects.equals(this.startDate, matchCreateRequest.startDate) &&
        Objects.equals(this.endDate, matchCreateRequest.endDate) &&
        Objects.equals(this.voteStartDate, matchCreateRequest.voteStartDate) &&
        Objects.equals(this.voteEndDate, matchCreateRequest.voteEndDate) &&
        Objects.equals(this.attendDeadlineDate, matchCreateRequest.attendDeadlineDate);
  }

  @Override
  public int hashCode() {
    return Objects.hash(teamId, stadiumId, otherTeamName, home, notice, startDate, endDate, voteStartDate, voteEndDate, attendDeadlineDate);
  }

  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class MatchCreateRequest {\n");
    sb.append("    teamId: ").append(toIndentedString(teamId)).append("\n");
    sb.append("    stadiumId: ").append(toIndentedString(stadiumId)).append("\n");
    sb.append("    otherTeamName: ").append(toIndentedString(otherTeamName)).append("\n");
    sb.append("    home: ").append(toIndentedString(home)).append("\n");
    sb.append("    notice: ").append(toIndentedString(notice)).append("\n");
    sb.append("    startDate: ").append(toIndentedString(startDate)).append("\n");
    sb.append("    endDate: ").append(toIndentedString(endDate)).append("\n");
    sb.append("    voteStartDate: ").append(toIndentedString(voteStartDate)).append("\n");
    sb.append("    voteEndDate: ").append(toIndentedString(voteEndDate)).append("\n");
    sb.append("    attendDeadlineDate: ").append(toIndentedString(attendDeadlineDate)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }


  public static HashSet<String> openapiFields;
  public static HashSet<String> openapiRequiredFields;

  static {
    // a set of all properties/fields (JSON key names)
    openapiFields = new HashSet<String>();
    openapiFields.add("teamId");
    openapiFields.add("stadiumId");
    openapiFields.add("otherTeamName");
    openapiFields.add("home");
    openapiFields.add("notice");
    openapiFields.add("startDate");
    openapiFields.add("endDate");
    openapiFields.add("voteStartDate");
    openapiFields.add("voteEndDate");
    openapiFields.add("attendDeadlineDate");

    // a set of required properties/fields (JSON key names)
    openapiRequiredFields = new HashSet<String>();
  }

 /**
  * Validates the JSON Object and throws an exception if issues found
  *
  * @param jsonObj JSON Object
  * @throws IOException if the JSON Object is invalid with respect to MatchCreateRequest
  */
  public static void validateJsonObject(JsonObject jsonObj) throws IOException {
      if (jsonObj == null) {
        if (MatchCreateRequest.openapiRequiredFields.isEmpty()) {
          return;
        } else { // has required fields
          throw new IllegalArgumentException(String.format("The required field(s) %s in MatchCreateRequest is not found in the empty JSON string", MatchCreateRequest.openapiRequiredFields.toString()));
        }
      }

      Set<Entry<String, JsonElement>> entries = jsonObj.entrySet();
      // check to see if the JSON string contains additional fields
      for (Entry<String, JsonElement> entry : entries) {
        if (!MatchCreateRequest.openapiFields.contains(entry.getKey())) {
          throw new IllegalArgumentException(String.format("The field `%s` in the JSON string is not defined in the `MatchCreateRequest` properties. JSON: %s", entry.getKey(), jsonObj.toString()));
        }
      }
      if ((jsonObj.get("otherTeamName") != null && !jsonObj.get("otherTeamName").isJsonNull()) && !jsonObj.get("otherTeamName").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `otherTeamName` to be a primitive type in the JSON string but got `%s`", jsonObj.get("otherTeamName").toString()));
      }
      if ((jsonObj.get("notice") != null && !jsonObj.get("notice").isJsonNull()) && !jsonObj.get("notice").isJsonPrimitive()) {
        throw new IllegalArgumentException(String.format("Expected the field `notice` to be a primitive type in the JSON string but got `%s`", jsonObj.get("notice").toString()));
      }
  }

  public static class CustomTypeAdapterFactory implements TypeAdapterFactory {
    @SuppressWarnings("unchecked")
    @Override
    public <T> TypeAdapter<T> create(Gson gson, TypeToken<T> type) {
       if (!MatchCreateRequest.class.isAssignableFrom(type.getRawType())) {
         return null; // this class only serializes 'MatchCreateRequest' and its subtypes
       }
       final TypeAdapter<JsonElement> elementAdapter = gson.getAdapter(JsonElement.class);
       final TypeAdapter<MatchCreateRequest> thisAdapter
                        = gson.getDelegateAdapter(this, TypeToken.get(MatchCreateRequest.class));

       return (TypeAdapter<T>) new TypeAdapter<MatchCreateRequest>() {
           @Override
           public void write(JsonWriter out, MatchCreateRequest value) throws IOException {
             JsonObject obj = thisAdapter.toJsonTree(value).getAsJsonObject();
             elementAdapter.write(out, obj);
           }

           @Override
           public MatchCreateRequest read(JsonReader in) throws IOException {
             JsonObject jsonObj = elementAdapter.read(in).getAsJsonObject();
             validateJsonObject(jsonObj);
             return thisAdapter.fromJsonTree(jsonObj);
           }

       }.nullSafe();
    }
  }

 /**
  * Create an instance of MatchCreateRequest given an JSON string
  *
  * @param jsonString JSON string
  * @return An instance of MatchCreateRequest
  * @throws IOException if the JSON string is invalid with respect to MatchCreateRequest
  */
  public static MatchCreateRequest fromJson(String jsonString) throws IOException {
    return JSON.getGson().fromJson(jsonString, MatchCreateRequest.class);
  }

 /**
  * Convert an instance of MatchCreateRequest to an JSON string
  *
  * @return JSON string
  */
  public String toJson() {
    return JSON.getGson().toJson(this);
  }
}

